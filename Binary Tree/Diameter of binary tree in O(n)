#include<stdio.h>
#include<stdlib.h>

typedef struct Node
{
	int data;
	struct Node*left;
	struct Node*right;
}node;

node*createnode(int d)
{
	node*n=(node*)malloc(sizeof(node));
	n->data=d;
	n->left=n->right=NULL;
	return n;
}

int max(int a,int b)
{
	return a>b?a:b;
}

int diameter(node*root,int *height)
{
	if(root==NULL)
	return 0;
	
	int lh=0,rh=0;
	int ld=0,rd=0;
	
	if(root==NULL)
	{
		*height=0;
		return 0;
	}
	
	ld=diameter(root->left,&lh);
	rd=diameter(root->right,&rh);
	
	*height=max(lh,rh)+1;
	
	return max(lh+rh+1,max(ld,rd));
}

int main()
{
	node*root=NULL;
	root=createnode(1);
	root->left=createnode(2);
	root->right=createnode(3);
	root->left->left=createnode(4);;
	root->left->right=createnode(5);
	root->right->left=createnode(6);
	root->right->right=createnode(7);
	int height=0;
	printf("Diameter of binary tree = %d",diameter(root,&height));
	
	return 0;
}
