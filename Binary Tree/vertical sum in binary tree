#include<iostream>
#include<stdlib.h>
#include<map>
using namespace std;

typedef struct Node
{
	int data;
	struct Node*left;
	struct Node*right;
}node;

node*createnode(int d)
{
	node*n=(node*)malloc(sizeof(node));
	n->data=d;
	n->left=n->right=NULL;
	return n;
}

void verticalsum(node*root,int hd, map<int,int> &m)
{
	if(root==NULL)
	return;
	verticalsum(root->left,hd-1,m);
		m[hd] +=root->data;
	verticalsum(root->right,hd+1,m);
	
}

void printm(map<int,int>m)
{
	map<int,int>::iterator it;
	for(it=m.begin();it!=m.end();it++)
	cout<<it->second<<" ";
}

int main()
{
	node*root=NULL;
	root=createnode(1);
	root->left=createnode(2);
	root->right=createnode(3);
	root->left->left=createnode(4);;
	root->left->right=createnode(5);
	root->right->left=createnode(6);
	root->right->right=createnode(7);
	map<int,int> m;
	verticalsum(root,0,m);
	printm(m);
	return 0;
}
