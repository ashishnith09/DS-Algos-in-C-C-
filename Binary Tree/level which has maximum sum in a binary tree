#include<iostream>
#include<stdlib.h>
#include<queue>
using namespace std;

typedef struct Node
{
	int data;
	struct Node*left;
	struct Node*right;
}node;

node*createnode(int d)
{
	node*n=(node*)malloc(sizeof(node));
	n->data=d;
	n->left=n->right=NULL;
	return n;
}

int maxsum(node*root,int *level)
{
	if(root==NULL)
	return 0;
	
	queue<node*>q;
	node*temp;
	q.push(root);
	q.push(NULL);
	int sum=0,max=root->data;
	int maxl=-1;
	while(!q.empty())
	{
		temp=q.front();
		q.pop();
		if(temp==NULL)
		{
			maxl++;
			if(sum>max)
			{
			max=sum;
			*level=maxl;
		}
			if(!q.empty())
			q.push(NULL);
			
			sum=0;
		}
		else
		{
			sum=sum+temp->data;
			if(temp->left)
			q.push(temp->left);
			if(temp->right)
			q.push(temp->right);
		}
	}
	return max;
}

int main()
{
	
	node*root=NULL;
	root=createnode(1);
	root->left=createnode(2);
	root->right=createnode(3);
	root->left->left=createnode(4);;
	root->left->right=createnode(5);
	root->right->left=createnode(6);
	root->right->left->right=createnode(16);
	int level=0;
	printf("Maximum sum is = %d\n",maxsum(root,&level));
	printf("Level is %d",level);
	return 0;
}
