#include<stdio.h>
#include<stdlib.h>

typedef struct Node
{
	int data;
	struct Node*left;
	struct Node*right;
}node;

static int postindex;

node*createnode(int d)
{
	node*n=(node*)malloc(sizeof(node));
	n->data=d;
	n->left=n->right=NULL;
	return n;
}

int search(int in[],int st,int end,int d)
{
	int i;
	for(i=0;i<=end;i++)
	{
		if(in[i]==d)
		return i;
	}
}

node*buildtree(int in[],int post[],int st,int end)
{
	if(st>end)
	return NULL;
	
	node*root=createnode(post[postindex--]);
	int index=search(in,st,end,root->data);
	
	root->right=buildtree(in,post,index+1,end);
	root->left=buildtree(in,post,st,index-1);
	
	return root;
	
}

void printinorder(node*root)
{
	if(root==NULL)
	return;
	printinorder(root->left);
	printf("%d ",root->data);
	printinorder(root->right);
}

int main()
{
	int inorder[]={4,2,5,1,6,3,7};
	int postorder[]={4,5,2,6,7,3,1};
	int n=sizeof(inorder)/sizeof(inorder[0]);
	postindex=n-1;
	node*root=buildtree(inorder,postorder,0,n-1);
	
	printinorder(root);
	return 0;
}
