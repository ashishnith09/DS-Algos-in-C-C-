#include<stdio.h>
#include<stdlib.h>

typedef struct Node
{
	int data;
	struct Node*left;
	struct Node*right;
	struct Node*next;
}node;

node*createnode(int d)
{
	node*n=(node*)malloc(sizeof(node));
	n->data=d;
	n->left=n->right=NULL;
	n->next=NULL;
	return n;
}

void push(node**headf,node*root)
{
root->next=*headf;
*headf=root;	
}

node*pop(node**headf)
{
	if(*headf==NULL)
	exit(0);
	
	node*temp=(*headf);
	(*headf)=(*headf)->next;
	
	return temp;
}

void preorder(node*root)
{
	node*top=NULL;
	while(1)
	{
		while(root)
		{
			printf("%d ",root->data);
			push(&top,root);
			root=root->left;
			if(root==NULL)
			break;
		}
		root=pop(&top);
		root=root->right;
		
	}
	
}

int main()
{
	node*root=NULL;
	root=createnode(1);
	root->left=createnode(2);
	root->right=createnode(3);
	root->left->left=createnode(4);;
	root->left->right=createnode(5);
	root->right->left=createnode(6);
	root->right->right=createnode(7);
	
	printf("Preorder traversal\n");
	preorder(root);
	return 0;
}
