#include<stdio.h>
#include<stdlib.h>

typedef struct Node
{
	int data;
	struct Node*left;
	struct Node*right;
}node;

node*createnode(int d)
{
	node*n=(node*)malloc(sizeof(node));
	n->data=d;
	n->left=n->right=NULL;
	return n;
}

int findpath(node*root,int path[],int n1,int *i)
{
	if(root==NULL)
	return 0;
	
	path[*i]=root->data;
	(*i)++;
	
	if(root->data==n1)
	return 1;
	
	int l=findpath(root->left,path,n1,i);
	int r=findpath(root->right,path,n1,i);
	
	if(l||r)
	return 1;
	
	(*i)--;
	return 0;
}

int findLCA(node*root,int n1,int n2)
{
if(root==NULL)
return NULL;

int path1[100],path2[100],i=0,k=0;
int j;

int p1=findpath(root,path1,n1,&i);
int p2=findpath(root,path2,n2,&k);
//printf("%d\n",p1);
//printf("%d\n",p2);

for(j=0;j<i;j++)
printf("%d ",path1[j]);

printf("\n");
for(j=0;j<k;j++)
printf("%d ",path2[j]);

if(!p1|| !p2)
return -1;

for(j=0;j<i;j++)
if(path1[j]!=path2[j])
break;

for(j=0;j<i&&j<k;j++)
if(path1[j]!=path2[j])
break;

return path1[j-1];
}

int main()
{
	node*root=NULL;
	root=createnode(1);
	root->left=createnode(2);
	root->right=createnode(3);
	root->left->left=createnode(4);
	root->left->right=createnode(5);
	root->right->left=createnode(6);
	root->right->right=createnode(7);
	int lca=findLCA(root,4,3);
	printf("\n%d",lca);
	return 0;
}
