//level order traversal in reverse order
#include<stdio.h>
#include<stdlib.h>

typedef struct Node
{
	int data;
	struct Node*left;
	struct Node*right;
}node;

typedef struct Queue
{
	node*tnode;
	struct Queue*next;
}queue;

node*createnode(int d)
{
	node*n=(node*)malloc(sizeof(node));
	n->data=d;
	n->left=n->right=NULL;
	return n;
}

int height(node*root)
{
	if(root==NULL)
	return 0;
	int l=height(root->left);
	int r=height(root->right);
	
	if(l>r)
	return l+1;
	else
	return r+1;
}

void printgivenlevel(node*root,int l)
{
	if(root==NULL)
	return;
	if(l==1)
	{
		printf("%d ",root->data);
	}
	printgivenlevel(root->left,l-1);
	printgivenlevel(root->right,l-1);
	
}

void levelorder(node*root)
{
	if(root==NULL)
	return;
	int h=height(root);
	
	for(int i=h;i>=1;i--)
	printgivenlevel(root,i);
}

int main()
{
	node*root=NULL;
	root=createnode(1);
	root->left=createnode(2);
	root->right=createnode(3);
	root->left->left=createnode(4);;
	root->left->right=createnode(5);
	root->right->left=createnode(6);
	root->right->right=createnode(7);
	levelorder(root);
	return 0;
}
