// Author :: Gaurav Ahirwar
#include<bits/stdc++.h>
using namespace std;
 
struct node {
	int data;
	struct node *next;
};
typedef struct node node;
typedef struct node* Node;
 
node *newNode(int key) {
 
	Node temp = new node;
	temp->data = key;
	temp->next = NULL;
	return temp;
}
 
void printlist(Node head) {

	if(!head) {
		cout << "Empty List\n";
		return;
	}
	
	Node curr = head;
	cout << head->data << " ";
	head = head->next;

	while(head != curr) {
		cout << head->data << " ";
		head = head->next;
	}
	
	cout << endl;
}
 
void solve(Node &head, Node &head1, Node &head2) {
	
	if(!head) return;
	
	Node slow = head;
	Node fast = head;
	
	while(fast->next != head && fast->next->next != head) {
		
		slow = slow->next;
		fast = fast->next->next;
	}	
	
	head1 = head;
	head2 = slow->next;
	slow->next = head1;
	fast->next == head ? fast->next = head2 : fast->next->next = head2;
	
}
 

int main() {
 
	node *head = newNode(1);
	head->next = newNode(2);
	head->next->next = newNode(3);
	head->next->next->next = newNode(4);
	head->next->next->next->next = newNode(5);
	head->next->next->next->next->next = head;
 
	Node list1 = NULL, list2 = NULL;
	solve(head, list1, list2);
	printlist(list1);
	printlist(list2);
	
	return 0;
}
