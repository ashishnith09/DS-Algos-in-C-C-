#include<iostream>
using namespace std;

typedef struct Node
{
	int data;
	struct Node*next;
}node;

node*createnode(int d)
{
	node*n=new node;
	n->data=d;
	n->next=NULL;
	return n;
}

void push(node**headf,int d)
{
	node*n=createnode(d);
	n->next=*headf;
	*headf=n;
}

void print(node*head)
{
	while(head)
	{
		cout<<head->data<<"->";
		head=head->next;
	}
	cout<<"NULL"<<endl;
}

void rotateK(node**headf,int k)
{
//make it circular
node*curr=*headf;
while(curr->next)
curr=curr->next;

curr->next=*headf;
curr=*headf;
while(k>1)
{
	curr=curr->next;
	k--;
}
node*next=curr->next;
curr->next=NULL;
*headf=next;

}

int main()
{
	node*root=NULL;
	push(&root,10);
	push(&root,20);
	push(&root,30);
	push(&root,40);
	push(&root,50);
	print(root);
	int k;
	cout<<"enter the no of nodes to be rotated"<<endl;
	cin>>k;
	rotateK(&root,k);
	print(root);
	
	return 0;
}
