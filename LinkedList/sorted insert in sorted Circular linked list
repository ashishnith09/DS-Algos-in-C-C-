#include<iostream>
using namespace std;

typedef struct Node
{
int data;
struct Node*next;
}node;

node*createnode(int d)
{
node*n=new node;
n->data=d;
n->next=NULL;
return n;
}

void push(node**headf,node**last,int d)
{
node*n=createnode(d);
if(*headf==NULL)
{
*headf=n;
*last=n;
(*headf)->next=(*headf);
}
else
{
n->next=*headf;
(*last)->next=n;
*headf=n;
}

}

void print(node*head)
{
node*curr=head;
if(curr!=NULL)
{
do
{
cout<<curr->data<<"->";
curr=curr->next;

}while(curr!=head);
}
cout<<endl;
}

void sortedinsert(node**headf,int key)
{
	if(*headf==NULL)
	return;
node*n=createnode(key);
node*prev;
node*curr=*headf;
if(curr->data>=key)
{
n->next=curr;
while(curr->next!=*headf)
{
curr=curr->next;
}
curr->next=n;
*headf=n;
return;
}
prev=curr;
curr=curr->next;
while(curr->data<key && curr!=*headf)
{
prev=curr;
curr=curr->next;
}
if(prev->next==*headf)
{
prev->next=n;
n->next=*headf;
return;
}
prev->next=n;
n->next=curr;

}

int main()
{
node*root=NULL;
node*last=NULL;
push(&root,&last,13);
push(&root,&last,9);
push(&root,&last,5);
push(&root,&last,3);
push(&root,&last,1);
print(root);
sortedinsert(&root,20);
print(root);
}
