#include<stdio.h>
#include<stdlib.h>

typedef struct Node
{
	int data;
	struct Node*left;
	struct Node*right;
}node;

node*createnode(int d)
{
	node*n=(node*)malloc(sizeof(node));
	n->data=d;
	n->left=n->right=NULL;
	return n;
}

void inorder(node*root)
{
	if(root==NULL)
	return;
	inorder(root->left);
	printf("%d ",root->data);
	inorder(root->right);
}

node* insert(node*root,int d)
{
	if(root==NULL)
	return createnode(d);
	
	if(d<root->data)
	root->left=insert(root->left,d);
	else if(d>root->data)
	root->right=insert(root->right,d);

	return root;
}

node*bstTodll(node*root,node**head)
{
	if(root==NULL)
	return NULL;
	
	static node*prev=NULL;
	
	bstTodll(root->left,head);
	
	if(prev==NULL)
	*head=root;
	else
	{
		root->left=prev;
		prev->right=root;
	}
	prev=root;
	
	bstTodll(root->right,head);
}

void printlist(node*head)
{
	while(head)
	{
	printf("%d->",head->data);
	head=head->right;
}
}

int main()
{
	node*root=NULL;
	root=insert(root,50);
    insert(root,30);
    insert(root,20);
    insert(root,40);
    insert(root,70);
    insert(root,60);
    insert(root,80);
    inorder(root);
    node*head=NULL;
    
    bstTodll(root,&head);
      printf("\n\n");
    printlist(head);
	return 0;
}
