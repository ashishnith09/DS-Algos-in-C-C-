#include<stdio.h>
#include<stdlib.h>

typedef struct Node
{
	int data;
	struct Node*left;
	struct Node*right;
}node;

node*createnode(int d)
{
	node*n=(node*)malloc(sizeof(node));
	n->data=d;
	n->left=n->right=NULL;
	return n;
}

node*insert(node*root,int d)
{
	if(root==NULL)
	return createnode(d);
	
	if(d<root->data)
	root->left=insert(root->left,d);
	else if(d>root->data)
	root->right=insert(root->right,d);
	
	return root;
}

void inorder(node*root)
{
	if(root==NULL)
	return;
	inorder(root->left);
	printf("%d ",root->data);
	inorder(root->right);
}

void findpresucc(node*root,node**pre,node**succ,int key)
{
	if(root==NULL)
	return;
	
	if(root->data==key)
	{
		if(root->left)
		{
		node*temp=root->left;
		while(temp->right)
		temp=temp->right;
		
		*pre=temp;
		}
	
		if(root->right)
		{
		node*temp=root->right;
		while(temp->left)
		temp=temp->left;
		
		*succ=temp;
		}
		return;
	}
	if(root->data>key)
	{
		*succ=root;
		findpresucc(root->left,pre,succ,key);
	}
	else
	{
		*pre=root;
		findpresucc(root->right,pre,succ,key);
	}
}


int main()
{
	node*root=NULL;
	root=insert(root,50);
    insert(root,30);
    insert(root,20);
    insert(root,40);
    insert(root,70);
    insert(root,60);
    insert(root,80);
    
    inorder(root);
    node*pre=NULL,*succ=NULL;
    findpresucc(root,&pre,&succ,30);
    if(pre)
    printf("\npredecessor is =%d \n",pre->data);
    else
    printf("\nNo predecssor\n");
    
    if(succ)
    printf("\nSuccessor is =%d \n",succ->data);
    else
    printf("\nNo successor\n");
	return 0;
}
