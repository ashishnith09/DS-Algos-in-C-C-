#include<stdio.h>
#include<stdlib.h>

typedef struct Node
{
	int data;
	struct Node*left;
	struct Node*right;
}node;

node*createnode(int d)
{
	node*n=(node*)malloc(sizeof(node));
	n->data=d;
	n->left=n->right=NULL;
	return n;
}

node*insert(node*root,int d)
{
	if(root==NULL)
	return createnode(d);
	
	if(root->data>d)
	root->left=insert(root->left,d);
	else if(root->data<d)
	root->right=insert(root->right,d);
	
	return root;
}

node*ksmallestinbst(node*root,int k)
{
	if(root==NULL)
	return root;
	int c=0;
	node*curr=root;
	
	while(curr!=NULL)
	{
		if(curr->left==NULL)
		{
			c++;
			if(c==k)
			{
				return curr;
			}
			curr=curr->right;
		}
		else if(curr->left)
		{
			node*pre=curr->left;
			while(pre->right && pre->right!=curr)
			{
				pre=pre->right;
			}
			if(pre->right!=curr)
			{
			pre->right=curr;
			curr=curr->left;
		}
			else
			{
			pre->right=NULL;
			c++;
			if(c==k)
			return curr;
			curr=curr->right;
			}
		}
		
	}
return curr;	
	
}


int main()
{
	node*root=NULL;
	root=insert(root,50);
    insert(root,30);
    insert(root,20);
    insert(root,40);
    insert(root,70);
    insert(root,60);
    insert(root,80);
	int k=5;
    node*kth=ksmallestinbst(root,k);
    if(kth)
    printf("\nKth node is = %d",kth->data);
    else
    printf("nodes does not exists");

}
